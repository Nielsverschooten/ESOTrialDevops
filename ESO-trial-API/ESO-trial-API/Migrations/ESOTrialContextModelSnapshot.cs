// <auto-generated />
using ESO_trial_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ESO_trial_API.Migrations
{
    [DbContext(typeof(ESOTrialContext))]
    partial class ESOTrialContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ESO_trial_API.Models.Enchantment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("effect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Enchantments");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Item", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("enchantmentid")
                        .HasColumnType("int");

                    b.Property<string>("item_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rarityid")
                        .HasColumnType("int");

                    b.Property<int>("setid")
                        .HasColumnType("int");

                    b.Property<int>("traitid")
                        .HasColumnType("int");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("enchantmentid");

                    b.HasIndex("rarityid");

                    b.HasIndex("setid");

                    b.HasIndex("traitid");

                    b.ToTable("Items");

                    b.HasDiscriminator<string>("item_type").HasValue("Item");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Player", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("characterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cp")
                        .HasColumnType("int");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ESO_trial_API.Models.PlayerItem", b =>
                {
                    b.Property<int>("itemid")
                        .HasColumnType("int");

                    b.Property<int>("playerid")
                        .HasColumnType("int");

                    b.HasKey("itemid", "playerid");

                    b.HasIndex("playerid");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Rarity", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Rarities");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Set", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Trait", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("effect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Traits");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Armor", b =>
                {
                    b.HasBaseType("ESO_trial_API.Models.Item");

                    b.Property<int>("armorRating")
                        .HasColumnType("int");

                    b.Property<string>("armortype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("durability")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("armor");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Weapon", b =>
                {
                    b.HasBaseType("ESO_trial_API.Models.Item");

                    b.Property<int>("charge")
                        .HasColumnType("int");

                    b.Property<int>("damage")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("weapon");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Item", b =>
                {
                    b.HasOne("ESO_trial_API.Models.Enchantment", "enchantment")
                        .WithMany("items")
                        .HasForeignKey("enchantmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESO_trial_API.Models.Rarity", "rarity")
                        .WithMany("items")
                        .HasForeignKey("rarityid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESO_trial_API.Models.Set", "set")
                        .WithMany("items")
                        .HasForeignKey("setid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESO_trial_API.Models.Trait", "trait")
                        .WithMany("items")
                        .HasForeignKey("traitid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("enchantment");

                    b.Navigation("rarity");

                    b.Navigation("set");

                    b.Navigation("trait");
                });

            modelBuilder.Entity("ESO_trial_API.Models.PlayerItem", b =>
                {
                    b.HasOne("ESO_trial_API.Models.Item", "item")
                        .WithMany("playeritems")
                        .HasForeignKey("itemid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ESO_trial_API.Models.Player", "player")
                        .WithMany("playeritems")
                        .HasForeignKey("playerid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("item");

                    b.Navigation("player");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Enchantment", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Item", b =>
                {
                    b.Navigation("playeritems");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Player", b =>
                {
                    b.Navigation("playeritems");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Rarity", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Set", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("ESO_trial_API.Models.Trait", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
